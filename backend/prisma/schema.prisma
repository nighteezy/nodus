
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id   @default(uuid())
  email String @unique
  password String
  name String
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects Project[]
  tasks Task[]
  messages Message[]
  chats Chat[] @relation("UserChats")
}

model Project {
  id String @id @default(uuid())
  name String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  tasks Task[]
  chats Chat[]
}

model Task {
  id        String   @id @default(uuid())
  title     String
  description String?
  status    TaskStatus @default(TODO)
  dueDate   DateTime?

  assignee  User?    @relation(fields: [assigneeId], references: [id])
  assigneeId String?

  project   Project  @relation(fields: [projectId], references: [id])
  projectId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id        String   @id @default(uuid())
  name      String
  isGroup   Boolean  @default(false)
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  participants User[] @relation("UserChats")
  messages     Message[]
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String

  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
}

enum Role {
  ADMIN
  EDITOR
  USER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
